{"ast":null,"code":"import axios from \"axios\";\nexport const searchCompanies = async query => {\n  try {\n    return await axios.get(`https://financialmodelingprep.com/stable/search-name?query=${query}&apikey=${process.env.REACT_APP_API_KEY}`);\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      return error.message;\n    }\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","searchCompanies","query","get","process","env","REACT_APP_API_KEY","error","isAxiosError","message"],"sources":["D:/DProjects/StockApp/frontend/src/api.tsx"],"sourcesContent":["import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { CompanySearch } from \"./company\";\r\n\r\nexport interface SearchResponse {\r\n    data: CompanySearch[];\r\n}\r\n\r\nexport const searchCompanies = async (query: string): Promise<AxiosResponse<SearchResponse, any> | string> => {\r\n    try {\r\n        return await axios.get<SearchResponse>(\r\n            `https://financialmodelingprep.com/stable/search-name?query=${query}&apikey=${process.env.REACT_APP_API_KEY}`\r\n        );\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error)) {\r\n            return error.message;\r\n        }\r\n        throw error;\r\n    }\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAqC,OAAO;AAOxD,OAAO,MAAMC,eAAe,GAAG,MAAOC,KAAa,IAA2D;EAC1G,IAAI;IACA,OAAO,MAAMF,KAAK,CAACG,GAAG,CAClB,8DAA8DD,KAAK,WAAWE,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAC/G,CAAC;EACL,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,IAAIP,KAAK,CAACQ,YAAY,CAACD,KAAK,CAAC,EAAE;MAC3B,OAAOA,KAAK,CAACE,OAAO;IACxB;IACA,MAAMF,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}