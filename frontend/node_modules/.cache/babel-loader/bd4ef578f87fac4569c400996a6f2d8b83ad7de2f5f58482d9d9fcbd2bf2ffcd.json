{"ast":null,"code":"var _jsxFileName = \"D:\\\\DProjects\\\\StockApp\\\\frontend\\\\src\\\\Components\\\\CompanyProfile\\\\CompanyProfile.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tableConfig = [{\n  label: \"Market Cap\",\n  render: company => formatLargeNonMonetaryNumber(company.marketCapTTM),\n  subTitle: \"Total value of all a company's shares of stock\"\n}, {\n  label: \"Current Ratio\",\n  render: company => formatRatio(company.currentRatioTTM),\n  subTitle: \"Measures the companies ability to pay short term debt obligations\"\n}, {\n  label: \"Return On Equity\",\n  render: company => formatRatio(company.roeTTM),\n  subTitle: \"Return on equity is the measure of a company's net income divided by its shareholder's equity\"\n}, {\n  label: \"Return On Assets\",\n  render: company => formatRatio(company.returnOnTangibleAssetsTTM),\n  subTitle: \"Return on assets is the measure of how effective a company is using its assets\"\n}, {\n  label: \"Free Cashflow Per Share\",\n  render: company => formatRatio(company.freeCashFlowPerShareTTM),\n  subTitle: \"Return on assets is the measure of how effective a company is using its assets\"\n}, {\n  label: \"Book Value Per Share TTM\",\n  render: company => formatRatio(company.bookValuePerShareTTM),\n  subTitle: \"Book value per share indicates a firm's net asset value (total assets - total liabilities) on per share basis\"\n}, {\n  label: \"Divdend Yield TTM\",\n  render: company => formatRatio(company.dividendYieldTTM),\n  subTitle: \"Shows how much a company pays each year relative to stock price\"\n}, {\n  label: \"Capex Per Share TTM\",\n  render: company => formatRatio(company.capexPerShareTTM),\n  subTitle: \"Capex is used by a company to aquire, upgrade, and maintain physical assets\"\n}, {\n  label: \"Graham Number\",\n  render: company => formatRatio(company.grahamNumberTTM),\n  subTitle: \"This is the upperbouind of the price range that a defensive investor should pay for a stock\"\n}, {\n  label: \"PE Ratio\",\n  render: company => formatRatio(company.peRatioTTM),\n  subTitle: \"This is the upperbouind of the price range that a defensive investor should pay for a stock\"\n}];\nconst CompanyProfile = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"CompanyProfile\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_c = CompanyProfile;\nexport default CompanyProfile;\nvar _c;\n$RefreshReg$(_c, \"CompanyProfile\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","tableConfig","label","render","company","formatLargeNonMonetaryNumber","marketCapTTM","subTitle","formatRatio","currentRatioTTM","roeTTM","returnOnTangibleAssetsTTM","freeCashFlowPerShareTTM","bookValuePerShareTTM","dividendYieldTTM","capexPerShareTTM","grahamNumberTTM","peRatioTTM","CompanyProfile","props","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DProjects/StockApp/frontend/src/Components/CompanyProfile/CompanyProfile.tsx"],"sourcesContent":["import React from 'react'\r\ntype Props = {};\r\n\r\nconst tableConfig = [\r\n  {\r\n    label: \"Market Cap\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatLargeNonMonetaryNumber(company.marketCapTTM),\r\n    subTitle: \"Total value of all a company's shares of stock\",\r\n  },\r\n  {\r\n    label: \"Current Ratio\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.currentRatioTTM),\r\n    subTitle:\r\n      \"Measures the companies ability to pay short term debt obligations\",\r\n  },\r\n  {\r\n    label: \"Return On Equity\",\r\n    render: (company: CompanyKeyMetrics) => formatRatio(company.roeTTM),\r\n    subTitle:\r\n      \"Return on equity is the measure of a company's net income divided by its shareholder's equity\",\r\n  },\r\n  {\r\n    label: \"Return On Assets\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.returnOnTangibleAssetsTTM),\r\n    subTitle:\r\n      \"Return on assets is the measure of how effective a company is using its assets\",\r\n  },\r\n  {\r\n    label: \"Free Cashflow Per Share\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.freeCashFlowPerShareTTM),\r\n    subTitle:\r\n      \"Return on assets is the measure of how effective a company is using its assets\",\r\n  },\r\n  {\r\n    label: \"Book Value Per Share TTM\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.bookValuePerShareTTM),\r\n    subTitle:\r\n      \"Book value per share indicates a firm's net asset value (total assets - total liabilities) on per share basis\",\r\n  },\r\n  {\r\n    label: \"Divdend Yield TTM\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.dividendYieldTTM),\r\n    subTitle: \"Shows how much a company pays each year relative to stock price\",\r\n  },\r\n  {\r\n    label: \"Capex Per Share TTM\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.capexPerShareTTM),\r\n    subTitle:\r\n      \"Capex is used by a company to aquire, upgrade, and maintain physical assets\",\r\n  },\r\n  {\r\n    label: \"Graham Number\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.grahamNumberTTM),\r\n    subTitle:\r\n      \"This is the upperbouind of the price range that a defensive investor should pay for a stock\",\r\n  },\r\n  {\r\n    label: \"PE Ratio\",\r\n    render: (company: CompanyKeyMetrics) => formatRatio(company.peRatioTTM),\r\n    subTitle:\r\n      \"This is the upperbouind of the price range that a defensive investor should pay for a stock\",\r\n  },\r\n];\r\n\r\nconst CompanyProfile = (props: Props) => {\r\n  return (\r\n    <div>CompanyProfile</div>\r\n  )\r\n}\r\n\r\nexport default CompanyProfile"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzB,MAAMC,WAAW,GAAG,CAClB;EACEC,KAAK,EAAE,YAAY;EACnBC,MAAM,EAAGC,OAA0B,IACjCC,4BAA4B,CAACD,OAAO,CAACE,YAAY,CAAC;EACpDC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,KAAK,EAAE,eAAe;EACtBC,MAAM,EAAGC,OAA0B,IACjCI,WAAW,CAACJ,OAAO,CAACK,eAAe,CAAC;EACtCF,QAAQ,EACN;AACJ,CAAC,EACD;EACEL,KAAK,EAAE,kBAAkB;EACzBC,MAAM,EAAGC,OAA0B,IAAKI,WAAW,CAACJ,OAAO,CAACM,MAAM,CAAC;EACnEH,QAAQ,EACN;AACJ,CAAC,EACD;EACEL,KAAK,EAAE,kBAAkB;EACzBC,MAAM,EAAGC,OAA0B,IACjCI,WAAW,CAACJ,OAAO,CAACO,yBAAyB,CAAC;EAChDJ,QAAQ,EACN;AACJ,CAAC,EACD;EACEL,KAAK,EAAE,yBAAyB;EAChCC,MAAM,EAAGC,OAA0B,IACjCI,WAAW,CAACJ,OAAO,CAACQ,uBAAuB,CAAC;EAC9CL,QAAQ,EACN;AACJ,CAAC,EACD;EACEL,KAAK,EAAE,0BAA0B;EACjCC,MAAM,EAAGC,OAA0B,IACjCI,WAAW,CAACJ,OAAO,CAACS,oBAAoB,CAAC;EAC3CN,QAAQ,EACN;AACJ,CAAC,EACD;EACEL,KAAK,EAAE,mBAAmB;EAC1BC,MAAM,EAAGC,OAA0B,IACjCI,WAAW,CAACJ,OAAO,CAACU,gBAAgB,CAAC;EACvCP,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,KAAK,EAAE,qBAAqB;EAC5BC,MAAM,EAAGC,OAA0B,IACjCI,WAAW,CAACJ,OAAO,CAACW,gBAAgB,CAAC;EACvCR,QAAQ,EACN;AACJ,CAAC,EACD;EACEL,KAAK,EAAE,eAAe;EACtBC,MAAM,EAAGC,OAA0B,IACjCI,WAAW,CAACJ,OAAO,CAACY,eAAe,CAAC;EACtCT,QAAQ,EACN;AACJ,CAAC,EACD;EACEL,KAAK,EAAE,UAAU;EACjBC,MAAM,EAAGC,OAA0B,IAAKI,WAAW,CAACJ,OAAO,CAACa,UAAU,CAAC;EACvEV,QAAQ,EACN;AACJ,CAAC,CACF;AAED,MAAMW,cAAc,GAAIC,KAAY,IAAK;EACvC,oBACEnB,OAAA;IAAAoB,QAAA,EAAK;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAE7B,CAAC;AAAAC,EAAA,GAJKP,cAAc;AAMpB,eAAeA,cAAc;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}