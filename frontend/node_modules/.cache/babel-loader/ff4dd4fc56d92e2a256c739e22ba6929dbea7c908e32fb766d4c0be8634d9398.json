{"ast":null,"code":"var _jsxFileName = \"D:\\\\DProjects\\\\StockApp\\\\frontend\\\\src\\\\Components\\\\CompanyProfile\\\\CompanyProfile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useOutletContext } from 'react-router';\nimport { getKeyMetrics } from '../../api';\nimport RatioList from '../RatioList/RatioList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tableConfig = [{\n  label: \"Стоимость компании (EV)\",\n  render: company => company.enterpriseValueTTM,\n  subTitle: \"Полная стоимость компании (капитализация + долг - денежные средства)\"\n}, {\n  label: \"Коэффициент текущей ликвидности\",\n  render: company => company.currentRatioTTM,\n  subTitle: \"Способность покрывать краткосрочные обязательства\"\n}, {\n  label: \"Свободный денежный поток на акцию\",\n  render: company => company.freeCashFlowPerShareTTM,\n  subTitle: \"Свободные денежные средства на одну акцию\"\n}, {\n  label: \"P/B (Цена/Балансовая стоимость)\",\n  render: company => company.priceToBookRatioTTM,\n  subTitle: \"Соотношение рыночной цены к балансовой стоимости\"\n}, {\n  label: \"Дивидендная доходность\",\n  render: company => company.dividendYieldTTM,\n  subTitle: \"Годовая дивидендная доходность\"\n}, {\n  label: \"P/E (Цена/Прибыль)\",\n  render: company => company.priceToEarningsRatioTTM,\n  subTitle: \"Соотношение цены акции к годовой прибыли\"\n}, {\n  label: \"Debt/Equity\",\n  render: company => company.debtToEquityRatioTTM,\n  subTitle: \"Соотношение заемного и собственного капитала\"\n}, {\n  label: \"Рентабельность активов\",\n  render: company => company.netProfitMarginTTM,\n  subTitle: \"Чистая рентабельность активов\"\n}];\nconst CompanyProfile = () => {\n  _s();\n  const ticker = useOutletContext();\n  const [companyData, setCompanyData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const data = await getKeyMetrics(ticker);\n        setCompanyData(data);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Ошибка загрузки данных');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [ticker]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-96\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 text-center mt-8\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n  if (!companyData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-500 text-center mt-8\",\n      children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-md p-6 mb-8\",\n    children: /*#__PURE__*/_jsxDEV(RatioList, {\n      tableConfig: tableConfig,\n      data: companyData,\n      className: \"space-y-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyProfile, \"McL2Kbyf842WTu2OJP2d04x25nQ=\", false, function () {\n  return [useOutletContext];\n});\n_c = CompanyProfile;\nexport default CompanyProfile;\nvar _c;\n$RefreshReg$(_c, \"CompanyProfile\");","map":{"version":3,"names":["React","useEffect","useState","useOutletContext","getKeyMetrics","RatioList","jsxDEV","_jsxDEV","tableConfig","label","render","company","enterpriseValueTTM","subTitle","currentRatioTTM","freeCashFlowPerShareTTM","priceToBookRatioTTM","dividendYieldTTM","priceToEarningsRatioTTM","debtToEquityRatioTTM","netProfitMarginTTM","CompanyProfile","_s","ticker","companyData","setCompanyData","loading","setLoading","error","setError","fetchData","data","err","Error","message","className","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["D:/DProjects/StockApp/frontend/src/Components/CompanyProfile/CompanyProfile.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { CompanyKeyMetrics } from '../../company';\r\nimport { useOutletContext } from 'react-router';\r\nimport { getKeyMetrics } from '../../api';\r\nimport RatioList from '../RatioList/RatioList';\r\ntype Props = {};\r\n\r\nconst tableConfig = [\r\n  {\r\n    label: \"Стоимость компании (EV)\",\r\n    render: (company: CompanyKeyMetrics) => \r\n      company.enterpriseValueTTM,\r\n    subTitle: \"Полная стоимость компании (капитализация + долг - денежные средства)\",\r\n  },\r\n  {\r\n    label: \"Коэффициент текущей ликвидности\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      company.currentRatioTTM,\r\n    subTitle: \"Способность покрывать краткосрочные обязательства\",\r\n  },\r\n  {\r\n    label: \"Свободный денежный поток на акцию\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      company.freeCashFlowPerShareTTM,\r\n    subTitle: \"Свободные денежные средства на одну акцию\",\r\n  },\r\n  {\r\n    label: \"P/B (Цена/Балансовая стоимость)\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      company.priceToBookRatioTTM,\r\n    subTitle: \"Соотношение рыночной цены к балансовой стоимости\",\r\n  },\r\n  {\r\n    label: \"Дивидендная доходность\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      company.dividendYieldTTM,\r\n    subTitle: \"Годовая дивидендная доходность\",\r\n  },\r\n  {\r\n    label: \"P/E (Цена/Прибыль)\",\r\n    render: (company: CompanyKeyMetrics) => \r\n      company.priceToEarningsRatioTTM,\r\n    subTitle: \"Соотношение цены акции к годовой прибыли\",\r\n  },\r\n  {\r\n    label: \"Debt/Equity\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      company.debtToEquityRatioTTM,\r\n    subTitle: \"Соотношение заемного и собственного капитала\",\r\n  },\r\n  {\r\n    label: \"Рентабельность активов\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      company.netProfitMarginTTM, \r\n    subTitle: \"Чистая рентабельность активов\",\r\n  }\r\n];\r\n\r\nconst CompanyProfile = () => {\r\n  const ticker = useOutletContext<string>()\r\n  const [companyData, setCompanyData] = useState<CompanyKeyMetrics | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true)\r\n        const data = await getKeyMetrics(ticker)\r\n        setCompanyData(data)\r\n      } catch (err) {\r\n        setError(err instanceof Error ? err.message : 'Ошибка загрузки данных')\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [ticker])\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-96\">\r\n       \r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"text-red-500 text-center mt-8\">\r\n        {error}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (!companyData) {\r\n    return (\r\n      <div className=\"text-gray-500 text-center mt-8\">\r\n        Данные не найдены\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\r\n      <RatioList \r\n        tableConfig={tableConfig} \r\n        data={companyData} \r\n        className=\"space-y-6\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default CompanyProfile"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}