{"ast":null,"code":"var _jsxFileName = \"D:\\\\DProjects\\\\StockApp\\\\frontend\\\\src\\\\Components\\\\CompanyProfile\\\\CompanyProfile.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tableConfig = [{\n  label: \"Enterprise Value\",\n  render: company => formatLargeNonMonetaryNumber(company.enterpriseValueTTM),\n  subTitle: \"Total company value (market cap + debt - cash)\"\n}, {\n  label: \"Current Ratio\",\n  render: company => formatRatio(company.currentRatioTTM),\n  // Было currentRatioTTM -> исправлено на currentRatioTTM (опечатка в оригинале)\n  subTitle: \"Способность покрывать краткосрочные обязательства\"\n}, {\n  label: \"Return On Equity\",\n  render: company => company.returnOnEquityTTM,\n  // Было roeTTM -> исправлено на returnOnEquityTTM\n  subTitle: \"Доходность собственного капитала\"\n}, {\n  label: \"Return On Tangible Assets\",\n  render: company => company.returnOnTangibleAssetsTTM,\n  subTitle: \"Рентабельность материальных активов\"\n}, {\n  label: \"Free Cashflow Per Share\",\n  render: company => formatRatio(company.freeCashFlowPerShareTTM),\n  subTitle: \"Свободный денежный поток на акцию\"\n}, {\n  label: \"Price to Book Value\",\n  render: company => formatRatio(company.priceToBookRatioTTM),\n  // Было bookValuePerShareTTM -> исправлено на priceToBookRatioTTM\n  subTitle: \"Отношение цены к балансовой стоимости\"\n}, {\n  label: \"Dividend Yield TTM\",\n  render: company => formatPercent(company.dividendYieldTTM),\n  // Добавлен формат процентов\n  subTitle: \"Дивидендная доходность\"\n}, {\n  label: \"PE Ratio\",\n  render: company => formatRatio(company.priceToEarningsRatioTTM),\n  // Было peRatioTTM -> исправлено на priceToEarningsRatioTTM\n  subTitle: \"Отношение цены к прибыли\"\n}, {\n  label: \"Debt to Equity\",\n  render: company => formatRatio(company.debtToEquityRatioTTM),\n  subTitle: \"Соотношение заемного и собственного капитала\"\n}];\nconst CompanyProfile = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"CompanyProfile\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_c = CompanyProfile;\nexport default CompanyProfile;\nvar _c;\n$RefreshReg$(_c, \"CompanyProfile\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","tableConfig","label","render","company","formatLargeNonMonetaryNumber","enterpriseValueTTM","subTitle","formatRatio","currentRatioTTM","returnOnEquityTTM","returnOnTangibleAssetsTTM","freeCashFlowPerShareTTM","priceToBookRatioTTM","formatPercent","dividendYieldTTM","priceToEarningsRatioTTM","debtToEquityRatioTTM","CompanyProfile","props","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DProjects/StockApp/frontend/src/Components/CompanyProfile/CompanyProfile.tsx"],"sourcesContent":["import React from 'react'\r\nimport { CompanyKeyMetrics } from '../../company';\r\ntype Props = {};\r\n\r\nconst tableConfig = [\r\n  {\r\n    label: \"Enterprise Value\",\r\n    render: (company: CompanyKeyMetrics) => \r\n      formatLargeNonMonetaryNumber(company.enterpriseValueTTM),\r\n    subTitle: \"Total company value (market cap + debt - cash)\",\r\n  },\r\n  {\r\n    label: \"Current Ratio\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.currentRatioTTM), // Было currentRatioTTM -> исправлено на currentRatioTTM (опечатка в оригинале)\r\n    subTitle: \"Способность покрывать краткосрочные обязательства\",\r\n  },\r\n  {\r\n    label: \"Return On Equity\",\r\n    render: (company: CompanyKeyMetrics) => \r\n      company.returnOnEquityTTM, // Было roeTTM -> исправлено на returnOnEquityTTM\r\n    subTitle: \"Доходность собственного капитала\",\r\n  },\r\n  {\r\n    label: \"Return On Tangible Assets\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      company.returnOnTangibleAssetsTTM,\r\n    subTitle: \"Рентабельность материальных активов\",\r\n  },\r\n  {\r\n    label: \"Free Cashflow Per Share\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.freeCashFlowPerShareTTM),\r\n    subTitle: \"Свободный денежный поток на акцию\",\r\n  },\r\n  {\r\n    label: \"Price to Book Value\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.priceToBookRatioTTM), // Было bookValuePerShareTTM -> исправлено на priceToBookRatioTTM\r\n    subTitle: \"Отношение цены к балансовой стоимости\",\r\n  },\r\n  {\r\n    label: \"Dividend Yield TTM\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatPercent(company.dividendYieldTTM), // Добавлен формат процентов\r\n    subTitle: \"Дивидендная доходность\",\r\n  },\r\n  {\r\n    label: \"PE Ratio\",\r\n    render: (company: CompanyKeyMetrics) => \r\n      formatRatio(company.priceToEarningsRatioTTM), // Было peRatioTTM -> исправлено на priceToEarningsRatioTTM\r\n    subTitle: \"Отношение цены к прибыли\",\r\n  },\r\n  {\r\n    label: \"Debt to Equity\",\r\n    render: (company: CompanyKeyMetrics) =>\r\n      formatRatio(company.debtToEquityRatioTTM),\r\n    subTitle: \"Соотношение заемного и собственного капитала\",\r\n  }\r\n];\r\n\r\nconst CompanyProfile = (props: Props) => {\r\n  return (\r\n    <div>CompanyProfile</div>\r\n  )\r\n}\r\n\r\nexport default CompanyProfile"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIzB,MAAMC,WAAW,GAAG,CAClB;EACEC,KAAK,EAAE,kBAAkB;EACzBC,MAAM,EAAGC,OAA0B,IACjCC,4BAA4B,CAACD,OAAO,CAACE,kBAAkB,CAAC;EAC1DC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,KAAK,EAAE,eAAe;EACtBC,MAAM,EAAGC,OAA0B,IACjCI,WAAW,CAACJ,OAAO,CAACK,eAAe,CAAC;EAAE;EACxCF,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,KAAK,EAAE,kBAAkB;EACzBC,MAAM,EAAGC,OAA0B,IACjCA,OAAO,CAACM,iBAAiB;EAAE;EAC7BH,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,KAAK,EAAE,2BAA2B;EAClCC,MAAM,EAAGC,OAA0B,IACjCA,OAAO,CAACO,yBAAyB;EACnCJ,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,KAAK,EAAE,yBAAyB;EAChCC,MAAM,EAAGC,OAA0B,IACjCI,WAAW,CAACJ,OAAO,CAACQ,uBAAuB,CAAC;EAC9CL,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,KAAK,EAAE,qBAAqB;EAC5BC,MAAM,EAAGC,OAA0B,IACjCI,WAAW,CAACJ,OAAO,CAACS,mBAAmB,CAAC;EAAE;EAC5CN,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,KAAK,EAAE,oBAAoB;EAC3BC,MAAM,EAAGC,OAA0B,IACjCU,aAAa,CAACV,OAAO,CAACW,gBAAgB,CAAC;EAAE;EAC3CR,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,KAAK,EAAE,UAAU;EACjBC,MAAM,EAAGC,OAA0B,IACjCI,WAAW,CAACJ,OAAO,CAACY,uBAAuB,CAAC;EAAE;EAChDT,QAAQ,EAAE;AACZ,CAAC,EACD;EACEL,KAAK,EAAE,gBAAgB;EACvBC,MAAM,EAAGC,OAA0B,IACjCI,WAAW,CAACJ,OAAO,CAACa,oBAAoB,CAAC;EAC3CV,QAAQ,EAAE;AACZ,CAAC,CACF;AAED,MAAMW,cAAc,GAAIC,KAAY,IAAK;EACvC,oBACEnB,OAAA;IAAAoB,QAAA,EAAK;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAE7B,CAAC;AAAAC,EAAA,GAJKP,cAAc;AAMpB,eAAeA,cAAc;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}