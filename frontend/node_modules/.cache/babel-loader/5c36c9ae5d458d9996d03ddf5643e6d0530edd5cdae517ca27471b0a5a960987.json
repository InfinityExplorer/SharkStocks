{"ast":null,"code":"var _jsxFileName = \"D:\\\\DProjects\\\\StockApp\\\\frontend\\\\src\\\\Components\\\\IncomeStatement\\\\IncomeStatement.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport { getIncomeStatement } from '../../api';\nimport Table from '../Table/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst configs = [{\n  label: \"Дата\",\n  render: c => c.date\n}, {\n  label: \"Общая выручка\",\n  render: c => c.revenue\n}, {\n  label: \"Чистая прибыль\",\n  render: c => c.netIncome\n}, {\n  label: \"Операционные расходы\",\n  render: c => c.operatingExpenses\n}, {\n  label: \"Себестоимость выручки\",\n  render: c => c.costOfRevenue\n}];\nconst IncomeStatement = () => {\n  _s();\n  const ticker = useOutletContext();\n  const [incomeStatement, setIncomeStatement] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const result = await getIncomeStatement(ticker);\n\n        // Исправление: убедимся, что получаем массив данных\n        if (result && Array.isArray(result.data)) {\n          setIncomeStatement(result.data);\n        } else {\n          throw new Error(\"Неверный формат данных\");\n        }\n        setError(null);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : \"Неизвестная ошибка\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [ticker]);\n\n  // Добавляем уникальные ключи к данным\n  const tableDataWithKeys = incomeStatement.map((item, index) => ({\n    ...item,\n    id: `${item.date}-${index}` // Создаем уникальный ключ\n  }));\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-8\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 text-center py-8\",\n      children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  if (incomeStatement.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-500 text-center py-8\",\n      children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Table, {\n    config: configs,\n    data: tableDataWithKeys\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n};\n_s(IncomeStatement, \"4cTNss+uRnRWWRoJoWTt35zfaKM=\", false, function () {\n  return [useOutletContext];\n});\n_c = IncomeStatement;\nexport default IncomeStatement;\nvar _c;\n$RefreshReg$(_c, \"IncomeStatement\");","map":{"version":3,"names":["React","useEffect","useState","useOutletContext","getIncomeStatement","Table","jsxDEV","_jsxDEV","configs","label","render","c","date","revenue","netIncome","operatingExpenses","costOfRevenue","IncomeStatement","_s","ticker","incomeStatement","setIncomeStatement","loading","setLoading","error","setError","fetchData","result","Array","isArray","data","Error","err","message","tableDataWithKeys","map","item","index","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","config","_c","$RefreshReg$"],"sources":["D:/DProjects/StockApp/frontend/src/Components/IncomeStatement/IncomeStatement.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { CompanyIncomeStatement } from '../../company';\r\nimport { useOutletContext } from 'react-router-dom';\r\nimport { getIncomeStatement } from '../../api';\r\nimport Table from '../Table/Table';\r\n\r\ntype Props = {}\r\n\r\nconst configs = [\r\n  { label: \"Дата\", render: (c: CompanyIncomeStatement) => c.date },\r\n  { label: \"Общая выручка\", render: (c: CompanyIncomeStatement) => c.revenue },\r\n  { label: \"Чистая прибыль\", render: (c: CompanyIncomeStatement) => c.netIncome },\r\n  { label: \"Операционные расходы\", render: (c: CompanyIncomeStatement) => c.operatingExpenses },\r\n  { label: \"Себестоимость выручки\", render: (c: CompanyIncomeStatement) => c.costOfRevenue },\r\n];\r\n\r\nconst IncomeStatement = () => {\r\n  const ticker = useOutletContext<string>();\r\n  const [incomeStatement, setIncomeStatement] = useState<CompanyIncomeStatement[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const result = await getIncomeStatement(ticker);\r\n        \r\n        // Исправление: убедимся, что получаем массив данных\r\n        if (result && Array.isArray(result!.data)) {\r\n          setIncomeStatement(result.data);\r\n        } else {\r\n          throw new Error(\"Неверный формат данных\");\r\n        }\r\n        setError(null);\r\n      } catch (err) {\r\n        setError(err instanceof Error ? err.message : \"Неизвестная ошибка\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [ticker]);\r\n\r\n  // Добавляем уникальные ключи к данным\r\n  const tableDataWithKeys = incomeStatement.map((item, index) => ({\r\n    ...item,\r\n    id: `${item.date}-${index}` // Создаем уникальный ключ\r\n  }));\r\n\r\n  if (loading) {\r\n    return <div className=\"text-center py-8\">Загрузка данных...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"text-red-500 text-center py-8\">Ошибка: {error}</div>;\r\n  }\r\n\r\n  if (incomeStatement.length === 0) {\r\n    return <div className=\"text-gray-500 text-center py-8\">Нет данных для отображения</div>;\r\n  }\r\n\r\n  return <Table config={configs} data={tableDataWithKeys} />;\r\n};\r\n\r\nexport default IncomeStatement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}